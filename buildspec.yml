version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      
      # CRITICAL: Ensure we have latest code
      - echo "Pulling latest code from main branch..."
      - git fetch origin main
      - git reset --hard origin/main
      - git pull origin main
      
      # Verify we have the correct version
      - echo "Current version in code:"
      - grep -E "VERSION|DEPLOYMENT_TIMESTAMP" modules/core/config.py | head -5
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image with NO CACHE...
      # FORCE NO CACHE to ensure latest code is included
      - docker build --no-cache -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"agricultural-core","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
      
      # CRITICAL: Force ECS service update
      - echo "Updating ECS service to use new container..."
      - |
        aws ecs update-service \
          --cluster ava-olo-production \
          --service agricultural-core \
          --force-new-deployment \
          --region $AWS_DEFAULT_REGION
      
      # Wait for deployment to complete
      - echo "Waiting for service to stabilize (this may take 2-3 minutes)..."
      - |
        aws ecs wait services-stable \
          --cluster ava-olo-production \
          --services agricultural-core \
          --region $AWS_DEFAULT_REGION || echo "Warning: Service may still be updating"
      
      # Verify deployment succeeded
      - echo "Verifying deployment..."
      - sleep 30
      - |
        DEPLOYED_VERSION=$(curl -s http://ava-olo-farmers-alb-82735690.us-east-1.elb.amazonaws.com/api/v1/system/health | grep -o '"version":"[^"]*"' | cut -d'"' -f4 || echo "unknown")
        echo "Deployed version: $DEPLOYED_VERSION"
        echo "Expected commit: $COMMIT_HASH"
        if [[ "$DEPLOYED_VERSION" == *"$COMMIT_HASH"* ]] || [[ "$DEPLOYED_VERSION" == *"$IMAGE_TAG"* ]]; then
          echo "✅ Deployment successful! New version is live: $DEPLOYED_VERSION"
        else
          echo "⚠️  Version check inconclusive. Deployed: $DEPLOYED_VERSION, Expected: $COMMIT_HASH"
          echo "Note: Version may still be updating. Check manually in a few minutes."
        fi
      
      - echo "ECS deployment pipeline completed!"
artifacts:
  files: imagedefinitions.json