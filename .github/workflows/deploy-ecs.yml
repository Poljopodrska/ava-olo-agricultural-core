name: Deploy Monitoring Dashboards to ECS

  on:
    push:
      branches:
        - main
        - master
      tags:
        - 'v*'

  env:
    AWS_REGION: us-east-1
    ECR_REGISTRY: 127679825789.dkr.ecr.us-east-1.amazonaws.com
    ECR_REPOSITORY: ava-olo/monitoring-dashboards
    ECS_CLUSTER: ava-olo-production
    ECS_SERVICE: monitoring-dashboards
    CONTAINER_NAME: monitoring

  jobs:
    deploy:
      name: Deploy to ECS
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{
  secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${GITHUB_SHA::8}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ steps.version.outputs.VERSION }}
        run: |
          # Build the Docker image
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

          # Tag for ECR
          docker tag $ECR_REPOSITORY:$IMAGE_TAG
  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:$IMAGE_TAG
  $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Push to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_REGISTRY }}/${{
  env.ECR_REPOSITORY }}:${{ steps.version.outputs.VERSION }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{
  steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Verify deployment
        run: |
          echo "ðŸŽ‰ Monitoring Dashboards deployed
  successfully!"
          echo "Version: ${{ steps.version.outputs.VERSION }}"
          echo "Service:
  https://ava-olo-alb-65365776.us-east-1.elb.amazonaws.com/"
